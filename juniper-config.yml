---
- name: Get Junos OS configuration in set format
  hosts: mytest
  gather_facts: no
  connection: netconf
  collections:
    - junipernetworks.junos
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_network_os: junos
    ansible_connection: netconf
  tasks:
    - name: Get committed config in set format
      junipernetworks.junos.junos_command:
        commands:
          - show configuration | display set
      register: set_output

    - name: Save set format to file
      copy:
        content: "{{ set_output.stdout[0] }}"
        dest: "/runner/{{ inventory_hostname }}-{{ lookup('pipe','date +%Y-%m-%d') }}.set"

- name: Get Junos OS configuration in JSON format
  hosts: mytest
  gather_facts: no
  connection: netconf
  collections:
    - junipernetworks.junos

  tasks:
    - name: Get committed config in JSON format
      junipernetworks.junos.junos_command:
        commands:
          - show configuration | display json
      register: json_output

    - name: Save JSON format to file
      copy:
        content: "{{ json_output.stdout[0] }}"
        dest: "/runner/{{ inventory_hostname }}-{{ lookup('pipe','date +%Y-%m-%d') }}.json"

- name: Upload set format configs to OpenStack Swift
  hosts: localhost
  gather_facts: no
  collections:
    - openstack.cloud

  tasks:
    - name: Upload set format config
      openstack.cloud.object:
        state: present
        container: backup-set
        name: "{{ item }}-{{ lookup('pipe','date +%Y-%m-%d') }}.set"
        filename: "/runner/{{ item }}-{{ lookup('pipe','date +%Y-%m-%d') }}.set"
      loop: "{{ groups['mytest'] }}"

- name: Upload JSON format configs to OpenStack Swift
  hosts: localhost
  gather_facts: no
  collections:
    - openstack.cloud

  tasks:
    - name: Upload JSON format config
      openstack.cloud.object:
        state: present
        container: backup-json
        name: "{{ item }}-{{ lookup('pipe','date +%Y-%m-%d') }}.json"
        filename: "/runner/{{ item }}-{{ lookup('pipe','date +%Y-%m-%d') }}.json"
      loop: "{{ groups['mytest'] }}"
